(function () {
	'use strict';

	erpnext.ProductView =  class {
		/* Options:
			- View Type
			- Products Section Wrapper,
			- Item Group: If its an Item Group page
		*/
		constructor(options) {
			Object.assign(this, options);
			this.preference = this.view_type;
			this.make();
		}

		make(from_filters) {
			if ( from_filters === void 0 ) from_filters=false;

			this.products_section.empty();
			this.prepare_toolbar();
			this.get_item_filter_data(from_filters);
		}

		prepare_toolbar() {
			this.products_section.append("\n\t\t\t<div class=\"toolbar d-flex\">\n\t\t\t</div>\n\t\t");
			this.prepare_search();
			this.prepare_view_toggler();

			frappe.require('/assets/js/e-commerce.min.js', function() {
				new erpnext.ProductSearch();
			});
		}

		prepare_view_toggler() {

			if (!$("#list").length || !$("#image-view").length) {
				this.render_view_toggler();
				this.bind_view_toggler_actions();
				this.set_view_state();
			}
		}

		get_item_filter_data(from_filters) {
			if ( from_filters === void 0 ) from_filters=false;

			// Get and render all Product related views
			var me = this;
			this.from_filters = from_filters;
			var args = this.get_query_filters();

			this.disable_view_toggler(true);

			frappe.call({
				method: "erpnext.e_commerce.api.get_product_filter_data",
				args: {
					query_args: args
				},
				callback: function(result) {
					if (!result || result.exc || !result.message || result.message.exc) {
						me.render_no_products_section(true);
					} else {
						// Sub Category results are independent of Items
						if (me.item_group && result.message["sub_categories"].length) {
							me.render_item_sub_categories(result.message["sub_categories"]);
						}

						if (!result.message["items"].length) {
							// if result has no items or result is empty
							me.render_no_products_section();
						} else {
							// Add discount filters
							me.re_render_discount_filters(result.message["filters"].discount_filters);

							// Render views
							me.render_list_view(result.message["items"], result.message["settings"]);
							me.render_grid_view(result.message["items"], result.message["settings"]);

							me.products = result.message["items"];
							me.product_count = result.message["items_count"];
						}

						// Bind filter actions
						if (!from_filters) {
							// If `get_product_filter_data` was triggered after checking a filter,
							// don't touch filters unnecessarily, only data must change
							// filter persistence is handle on filter change event
							me.bind_filters();
							me.restore_filters_state();
						}

						// Bottom paging
						me.add_paging_section(result.message["settings"]);
					}

					me.disable_view_toggler(false);
				}
			});
		}

		disable_view_toggler(disable) {
			if ( disable === void 0 ) disable=false;

			$('#list').prop('disabled', disable);
			$('#image-view').prop('disabled', disable);
		}

		render_grid_view(items, settings) {
			// loop over data and add grid html to it
			var me = this;
			this.prepare_product_area_wrapper("grid");

			frappe.require('/assets/js/e-commerce.min.js', function() {
				new erpnext.ProductGrid({
					items: items,
					products_section: $("#products-grid-area"),
					settings: settings,
					preference: me.preference
				});
			});
		}

		render_list_view(items, settings) {
			var me = this;
			this.prepare_product_area_wrapper("list");

			frappe.require('/assets/js/e-commerce.min.js', function() {
				new erpnext.ProductList({
					items: items,
					products_section: $("#products-list-area"),
					settings: settings,
					preference: me.preference
				});
			});
		}

		prepare_product_area_wrapper(view) {
			var left_margin = view == "list" ? "ml-2" : "";
			var top_margin = view == "list" ? "mt-6" : "mt-minus-1";
			return this.products_section.append(("\n\t\t\t<br>\n\t\t\t<div id=\"products-" + view + "-area\" class=\"row products-list " + top_margin + " " + left_margin + "\"></div>\n\t\t"));
		}

		get_query_filters() {
			var filters = frappe.utils.get_query_params();
			var field_filters = filters.field_filters;
			var attribute_filters = filters.attribute_filters;

			field_filters = field_filters ? JSON.parse(field_filters) : {};
			attribute_filters = attribute_filters ? JSON.parse(attribute_filters) : {};

			return {
				field_filters: field_filters,
				attribute_filters: attribute_filters,
				item_group: this.item_group,
				start: filters.start || null,
				from_filters: this.from_filters || false
			};
		}

		add_paging_section(settings) {
			$(".product-paging-area").remove();

			if (this.products) {
				var paging_html = "\n\t\t\t\t<div class=\"row product-paging-area mt-5\">\n\t\t\t\t\t<div class=\"col-3\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-9 text-right\">\n\t\t\t";
				var query_params = frappe.utils.get_query_params();
				var start = query_params.start ? cint(JSON.parse(query_params.start)) : 0;
				var page_length = settings.products_per_page || 0;

				var prev_disable = start > 0 ? "" : "disabled";
				var next_disable = (this.product_count > page_length) ? "" : "disabled";

				paging_html += "\n\t\t\t\t<button class=\"btn btn-default btn-prev\" data-start=\"" + (start - page_length) + "\"\n\t\t\t\t\tstyle=\"float: left\" " + prev_disable + ">\n\t\t\t\t\t" + (__("Prev")) + "\n\t\t\t\t</button>";

				paging_html += "\n\t\t\t\t<button class=\"btn btn-default btn-next\" data-start=\"" + (start + page_length) + "\"\n\t\t\t\t\t" + next_disable + ">\n\t\t\t\t\t" + (__("Next")) + "\n\t\t\t\t</button>\n\t\t\t";

				paging_html += "</div></div>";

				$(".page_content").append(paging_html);
				this.bind_paging_action();
			}
		}

		prepare_search() {
			$(".toolbar").append("\n\t\t\t<div class=\"input-group col-8 p-0\">\n\t\t\t\t<div class=\"dropdown w-100\" id=\"dropdownMenuSearch\">\n\t\t\t\t\t<input type=\"search\" name=\"query\" id=\"search-box\" class=\"form-control font-md\"\n\t\t\t\t\t\tplaceholder=\"Search for Products\"\n\t\t\t\t\t\taria-label=\"Product\" aria-describedby=\"button-addon2\">\n\t\t\t\t\t<div class=\"search-icon\">\n\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tstroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\tclass=\"feather feather-search\">\n\t\t\t\t\t\t\t<circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n\t\t\t\t\t\t\t<line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!-- Results dropdown rendered in product_search.js -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t");
		}

		render_view_toggler() {
			$(".toolbar").append("<div class=\"toggle-container col-4 p-0\"></div>");

			["btn-list-view", "btn-grid-view"].forEach(function (view) {
				var icon = view === "btn-list-view" ? "list" : "image-view";
				$(".toggle-container").append(("\n\t\t\t\t<div class=\"form-group mb-0\" id=\"toggle-view\">\n\t\t\t\t\t<button id=\"" + icon + "\" class=\"btn " + view + " mr-2\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<svg class=\"icon icon-md\">\n\t\t\t\t\t\t\t\t<use href=\"#icon-" + icon + "\"></use>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t"));
			});
		}

		bind_view_toggler_actions() {
			$("#list").click(function() {
				var $btn = $(this);
				$btn.removeClass('btn-primary');
				$btn.addClass('btn-primary');
				$(".btn-grid-view").removeClass('btn-primary');

				$("#products-grid-area").addClass("hidden");
				$("#products-list-area").removeClass("hidden");
				localStorage.setItem("product_view", "List View");
			});

			$("#image-view").click(function() {
				var $btn = $(this);
				$btn.removeClass('btn-primary');
				$btn.addClass('btn-primary');
				$(".btn-list-view").removeClass('btn-primary');

				$("#products-list-area").addClass("hidden");
				$("#products-grid-area").removeClass("hidden");
				localStorage.setItem("product_view", "Grid View");
			});
		}

		set_view_state() {
			if (this.preference === "List View") {
				$("#list").addClass('btn-primary');
				$("#image-view").removeClass('btn-primary');
			} else {
				$("#image-view").addClass('btn-primary');
				$("#list").removeClass('btn-primary');
			}
		}

		bind_paging_action() {
			var me = this;
			$('.btn-prev, .btn-next').click(function (e) {
				var $btn = $(e.target);
				me.from_filters = false;

				$btn.prop('disabled', true);
				var start = $btn.data('start');

				var query_params = frappe.utils.get_query_params();
				query_params.start = start;
				var path = window.location.pathname + '?' + frappe.utils.get_url_from_dict(query_params);
				window.location.href = path;
			});
		}

		re_render_discount_filters(filter_data) {
			this.get_discount_filter_html(filter_data);
			if (this.from_filters) {
				// Bind filter action if triggered via filters
				// if not from filter action, page load will bind actions
				this.bind_discount_filter_action();
			}
			// discount filters are rendered with Items (later)
			// unlike the other filters
			this.restore_discount_filter();
		}

		get_discount_filter_html(filter_data) {
			$("#discount-filters").remove();
			if (filter_data) {
				$("#product-filters").append(("\n\t\t\t\t<div id=\"discount-filters\" class=\"mb-4 filter-block pb-5\">\n\t\t\t\t\t<div class=\"filter-label mb-3\">" + (__("Discounts")) + "</div>\n\t\t\t\t</div>\n\t\t\t"));

				var html = "<div class=\"filter-options\">";
				filter_data.forEach(function (filter) {
					html += "\n\t\t\t\t\t<div class=\"checkbox\">\n\t\t\t\t\t\t<label data-value=\"" + (filter[0]) + "\">\n\t\t\t\t\t\t\t<input type=\"radio\"\n\t\t\t\t\t\t\t\tclass=\"product-filter discount-filter\"\n\t\t\t\t\t\t\t\tname=\"discount\" id=\"" + (filter[0]) + "\"\n\t\t\t\t\t\t\t\tdata-filter-name=\"discount\"\n\t\t\t\t\t\t\t\tdata-filter-value=\"" + (filter[0]) + "\"\n\t\t\t\t\t\t\t\tstyle=\"width: 14px !important\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"label-area\" for=\"" + (filter[0]) + "\">\n\t\t\t\t\t\t\t\t\t" + (filter[1]) + "\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t";
				});
				html += "</div>";

				$("#discount-filters").append(html);
			}
		}

		restore_discount_filter() {
			var filters = frappe.utils.get_query_params();
			var field_filters = filters.field_filters;
			if (!field_filters) { return; }

			field_filters = JSON.parse(field_filters);

			if (field_filters && field_filters["discount"]) {
				var values = field_filters["discount"];
				var selector = values.map(function (value) {
					return ("input[data-filter-name=\"discount\"][data-filter-value=\"" + value + "\"]");
				}).join(',');
				$(selector).prop('checked', true);
				this.field_filters = field_filters;
			}
		}

		bind_discount_filter_action() {
			var this$1 = this;

			var me = this;
			$('.discount-filter').on('change', function (e) {
				var $checkbox = $(e.target);
				var is_checked = $checkbox.is(':checked');

				var ref = $checkbox.data();
				var filter_value = ref.filterValue;

				delete this$1.field_filters["discount"];

				if (is_checked) {
					this$1.field_filters["discount"] = [];
					this$1.field_filters["discount"].push(filter_value);
				}

				if (this$1.field_filters["discount"].length === 0) {
					delete this$1.field_filters["discount"];
				}

				me.change_route_with_filters();
			});
		}

		bind_filters() {
			var this$1 = this;

			var me = this;
			this.field_filters = {};
			this.attribute_filters = {};

			$('.product-filter').on('change', function (e) {
				me.from_filters = true;

				var $checkbox = $(e.target);
				var is_checked = $checkbox.is(':checked');

				if ($checkbox.is('.attribute-filter')) {
					var ref = $checkbox.data();
					var attribute_name = ref.attributeName;
					var attribute_value = ref.attributeValue;

					if (is_checked) {
						this$1.attribute_filters[attribute_name] = this$1.attribute_filters[attribute_name] || [];
						this$1.attribute_filters[attribute_name].push(attribute_value);
					} else {
						this$1.attribute_filters[attribute_name] = this$1.attribute_filters[attribute_name] || [];
						this$1.attribute_filters[attribute_name] = this$1.attribute_filters[attribute_name].filter(function (v) { return v !== attribute_value; });
					}

					if (this$1.attribute_filters[attribute_name].length === 0) {
						delete this$1.attribute_filters[attribute_name];
					}
				} else if ($checkbox.is('.field-filter') || $checkbox.is('.discount-filter')) {
					var ref$1 = $checkbox.data();
					var filter_name = ref$1.filterName;
					var filter_value = ref$1.filterValue;

					if ($checkbox.is('.discount-filter')) {
						// clear previous discount filter to accomodate new
						delete this$1.field_filters["discount"];
					}
					if (is_checked) {
						this$1.field_filters[filter_name] = this$1.field_filters[filter_name] || [];
						if (!in_list(this$1.field_filters[filter_name], filter_value)) {
							this$1.field_filters[filter_name].push(filter_value);
						}
					} else {
						this$1.field_filters[filter_name] = this$1.field_filters[filter_name] || [];
						this$1.field_filters[filter_name] = this$1.field_filters[filter_name].filter(function (v) { return v !== filter_value; });
					}

					if (this$1.field_filters[filter_name].length === 0) {
						delete this$1.field_filters[filter_name];
					}
				}

				me.change_route_with_filters();
			});
		}

		change_route_with_filters() {
			var route_params = frappe.utils.get_query_params();

			var start = this.if_key_exists(route_params.start) || 0;
			if (this.from_filters) {
				start = 0; // show items from first page if new filters are triggered
			}

			var query_string = this.get_query_string({
				start: start,
				field_filters: JSON.stringify(this.if_key_exists(this.field_filters)),
				attribute_filters: JSON.stringify(this.if_key_exists(this.attribute_filters)),
			});
			window.history.pushState('filters', '', (location.pathname) + "?" + query_string);

			$('.page_content input').prop('disabled', true);

			this.make(true);
			$('.page_content input').prop('disabled', false);
		}

		restore_filters_state() {
			var filters = frappe.utils.get_query_params();
			var field_filters = filters.field_filters;
			var attribute_filters = filters.attribute_filters;

			if (field_filters) {
				field_filters = JSON.parse(field_filters);
				var loop = function ( fieldname ) {
					var values = field_filters[fieldname];
					var selector = values.map(function (value) {
						return ("input[data-filter-name=\"" + fieldname + "\"][data-filter-value=\"" + value + "\"]");
					}).join(',');
					$(selector).prop('checked', true);
				};

				for (var fieldname in field_filters) loop( fieldname );
				this.field_filters = field_filters;
			}
			if (attribute_filters) {
				attribute_filters = JSON.parse(attribute_filters);
				var loop$1 = function ( attribute ) {
					var values$1 = attribute_filters[attribute];
					var selector$1 = values$1.map(function (value) {
						return ("input[data-attribute-name=\"" + attribute + "\"][data-attribute-value=\"" + value + "\"]");
					}).join(',');
					$(selector$1).prop('checked', true);
				};

				for (var attribute in attribute_filters) loop$1( attribute );
				this.attribute_filters = attribute_filters;
			}
		}

		render_no_products_section(error) {
			if ( error === void 0 ) error=false;

			var error_section = "\n\t\t\t<div class=\"mt-4 w-100 alert alert-error font-md\">\n\t\t\t\tSomething went wrong. Please refresh or contact us.\n\t\t\t</div>\n\t\t";
			var no_results_section = "\n\t\t\t<div class=\"cart-empty frappe-card mt-4\">\n\t\t\t\t<div class=\"cart-empty-state\">\n\t\t\t\t\t<img src=\"/assets/erpnext/images/ui-states/cart-empty-state.png\" alt=\"Empty Cart\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"cart-empty-message mt-4\">" + (__('No products found')) + "</p>\n\t\t\t</div>\n\t\t";

			this.products_section.append(error ? error_section : no_results_section);
		}

		render_item_sub_categories(categories) {
			if (categories && categories.length) {
				var sub_group_html = "\n\t\t\t\t<div class=\"sub-category-container scroll-categories\">\n\t\t\t";

				categories.forEach(function (category) {
					sub_group_html += "\n\t\t\t\t\t<a href=\"" + (category.route || '#') + "\" style=\"text-decoration: none;\">\n\t\t\t\t\t\t<div class=\"category-pill\">\n\t\t\t\t\t\t\t" + (category.name) + "\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t";
				});
				sub_group_html += "</div>";

				$("#product-listing").prepend(sub_group_html);
			}
		}

		get_query_string(object) {
			var url = new URLSearchParams();
			for (var key in object) {
				var value = object[key];
				if (value) {
					url.append(key, value);
				}
			}
			return url.toString();
		}

		if_key_exists(obj) {
			var exists = false;
			for (var key in obj) {
				if (Object.prototype.hasOwnProperty.call(obj, key) && obj[key]) {
					exists = true;
					break;
				}
			}
			return exists ? obj : undefined;
		}
	};

	erpnext.ProductGrid = class {
		/* Options:
			- items: Items
			- settings: E Commerce Settings
			- products_section: Products Wrapper
			- preference: If preference is not grid view, render but hide
		*/
		constructor(options) {
			Object.assign(this, options);

			if (this.preference !== "Grid View") {
				this.products_section.addClass("hidden");
			}

			this.products_section.empty();
			this.make();
		}

		make() {
			var me = this;
			var html = "";

			this.items.forEach(function (item) {
				var title = item.web_item_name || item.item_name || item.item_code || "";
				title =  title.length > 90 ? title.substr(0, 90) + "..." : title;

				html += "<div class=\"col-sm-4 item-card\"><div class=\"card text-left\">";
				html += me.get_image_html(item, title);
				html += me.get_card_body_html(item, title, me.settings);
				html += "</div></div>";
			});

			var $product_wrapper = this.products_section;
			$product_wrapper.append(html);
		}

		get_image_html(item, title) {
			var image = item.website_image || item.image;

			if (image) {
				return ("\n\t\t\t\t<div class=\"card-img-container\">\n\t\t\t\t\t<a href=\"/" + (item.route || '#') + "\" style=\"text-decoration: none;\">\n\t\t\t\t\t\t<img class=\"card-img\" src=\"" + image + "\" alt=\"" + title + "\">\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t");
			} else {
				return ("\n\t\t\t\t<div class=\"card-img-container\">\n\t\t\t\t\t<a href=\"/" + (item.route || '#') + "\" style=\"text-decoration: none;\">\n\t\t\t\t\t\t<div class=\"card-img-top no-image\">\n\t\t\t\t\t\t\t" + (frappe.get_abbr(title)) + "\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t");
			}
		}

		get_card_body_html(item, title, settings) {
			var body_html = "\n\t\t\t<div class=\"card-body text-left card-body-flex\" style=\"width:100%\">\n\t\t\t\t<div style=\"margin-top: 1rem; display: flex;\">\n\t\t";
			body_html += this.get_title(item, title);

			// get floating elements
			if (!item.has_variants) {
				if (settings.enable_wishlist) {
					body_html += this.get_wishlist_icon(item);
				}
				if (settings.enabled) {
					body_html += this.get_cart_indicator(item);
				}

			}

			body_html += "</div>";
			body_html += "<div class=\"product-category\">" + (item.item_group || '') + "</div>";

			if (item.formatted_price) {
				body_html += this.get_price_html(item);
			}

			body_html += this.get_stock_availability(item, settings);
			body_html += this.get_primary_button(item, settings);
			body_html += "</div>"; // close div on line 49

			return body_html;
		}

		get_title(item, title) {
			var title_html = "\n\t\t\t<a href=\"/" + (item.route || '#') + "\">\n\t\t\t\t<div class=\"product-title\">\n\t\t\t\t\t" + (title || '') + "\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t";
			return title_html;
		}

		get_wishlist_icon(item) {
			var icon_class = item.wished ? "wished" : "not-wished";
			return ("\n\t\t\t<div class=\"like-action " + (item.wished ? "like-action-wished" : '') + "\"\n\t\t\t\tdata-item-code=\"" + (item.item_code) + "\">\n\t\t\t\t<svg class=\"icon sm\">\n\t\t\t\t\t<use class=\"" + icon_class + " wish-icon\" href=\"#icon-heart\"></use>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t");
		}

		get_cart_indicator(item) {
			return ("\n\t\t\t<div class=\"cart-indicator " + (item.in_cart ? '' : 'hidden') + "\" data-item-code=\"" + (item.item_code) + "\">\n\t\t\t\t1\n\t\t\t</div>\n\t\t");
		}

		get_price_html(item) {
			var price_html = "\n\t\t\t<div class=\"product-price\">\n\t\t\t\t" + (item.formatted_price || '') + "\n\t\t";

			if (item.formatted_mrp) {
				price_html += "\n\t\t\t\t<small class=\"striked-price\">\n\t\t\t\t\t<s>" + (item.formatted_mrp ? item.formatted_mrp.replace(/ +/g, "") : "") + "</s>\n\t\t\t\t</small>\n\t\t\t\t<small class=\"ml-1 product-info-green\">\n\t\t\t\t\t" + (item.discount) + " OFF\n\t\t\t\t</small>\n\t\t\t";
			}
			price_html += "</div>";
			return price_html;
		}

		get_stock_availability(item, settings) {
			if (settings.show_stock_availability && !item.has_variants) {
				if (item.on_backorder) {
					return ("\n\t\t\t\t\t<span class=\"out-of-stock mb-2 mt-1\" style=\"color: var(--primary-color)\">\n\t\t\t\t\t\t" + (__("Available on backorder")) + "\n\t\t\t\t\t</span>\n\t\t\t\t");
				} else if (!item.in_stock) {
					return ("\n\t\t\t\t\t<span class=\"out-of-stock mb-2 mt-1\">\n\t\t\t\t\t\t" + (__("Out of stock")) + "\n\t\t\t\t\t</span>\n\t\t\t\t");
				}
			}

			return "";
		}

		get_primary_button(item, settings) {
			if (item.has_variants) {
				return ("\n\t\t\t\t<a href=\"/" + (item.route || '#') + "\">\n\t\t\t\t\t<div class=\"btn btn-sm btn-explore-variants w-100 mt-4\">\n\t\t\t\t\t\t" + (__('Explore')) + "\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t");
			} else if (settings.enabled && (settings.allow_items_not_in_stock || item.in_stock)) {
				return ("\n\t\t\t\t<div id=\"" + (item.name) + "\" class=\"btn\n\t\t\t\t\tbtn-sm btn-primary btn-add-to-cart-list\n\t\t\t\t\tw-100 mt-2 " + (item.in_cart ? 'hidden' : '') + "\"\n\t\t\t\t\tdata-item-code=\"" + (item.item_code) + "\">\n\t\t\t\t\t<span class=\"mr-2\">\n\t\t\t\t\t\t<svg class=\"icon icon-md\">\n\t\t\t\t\t\t\t<use href=\"#icon-assets\"></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</span>\n\t\t\t\t\t" + (settings.enable_checkout ? __('Add to Cart') :  __('Add to Quote')) + "\n\t\t\t\t</div>\n\n\t\t\t\t<a href=\"/cart\">\n\t\t\t\t\t<div id=\"" + (item.name) + "\" class=\"btn\n\t\t\t\t\t\tbtn-sm btn-primary btn-add-to-cart-list\n\t\t\t\t\t\tw-100 mt-4 go-to-cart-grid\n\t\t\t\t\t\t" + (item.in_cart ? '' : 'hidden') + "\"\n\t\t\t\t\t\tdata-item-code=\"" + (item.item_code) + "\">\n\t\t\t\t\t\t" + (settings.enable_checkout ? __('Go to Cart') :  __('Go to Quote')) + "\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t");
			} else {
				return "";
			}
		}
	};

	erpnext.ProductList = class {
		/* Options:
			- items: Items
			- settings: E Commerce Settings
			- products_section: Products Wrapper
			- preference: If preference is not list view, render but hide
		*/
		constructor(options) {
			Object.assign(this, options);

			if (this.preference !== "List View") {
				this.products_section.addClass("hidden");
			}

			this.products_section.empty();
			this.make();
		}

		make() {
			var me = this;
			var html = "<br><br>";

			this.items.forEach(function (item) {
				var title = item.web_item_name || item.item_name || item.item_code || "";
				title =  title.length > 200 ? title.substr(0, 200) + "..." : title;

				html += "<div class='row list-row w-100 mb-4'>";
				html += me.get_image_html(item, title, me.settings);
				html += me.get_row_body_html(item, title, me.settings);
				html += "</div>";
			});

			var $product_wrapper = this.products_section;
			$product_wrapper.append(html);
		}

		get_image_html(item, title, settings) {
			var image = item.website_image || item.image;
			var wishlist_enabled = !item.has_variants && settings.enable_wishlist;
			var image_html = "";

			if (image) {
				image_html += "\n\t\t\t\t<div class=\"col-2 border text-center rounded list-image\">\n\t\t\t\t\t<a class=\"product-link product-list-link\" href=\"/" + (item.route || '#') + "\">\n\t\t\t\t\t\t<img itemprop=\"image\" class=\"website-image h-100 w-100\" alt=\"" + title + "\"\n\t\t\t\t\t\t\tsrc=\"" + image + "\">\n\t\t\t\t\t</a>\n\t\t\t\t\t" + (wishlist_enabled ? this.get_wishlist_icon(item): '') + "\n\t\t\t\t</div>\n\t\t\t";
			} else {
				image_html += "\n\t\t\t\t<div class=\"col-2 border text-center rounded list-image\">\n\t\t\t\t\t<a class=\"product-link product-list-link\" href=\"/" + (item.route || '#') + "\"\n\t\t\t\t\t\tstyle=\"text-decoration: none\">\n\t\t\t\t\t\t<div class=\"card-img-top no-image-list\">\n\t\t\t\t\t\t\t" + (frappe.get_abbr(title)) + "\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t" + (wishlist_enabled ? this.get_wishlist_icon(item): '') + "\n\t\t\t\t</div>\n\t\t\t";
			}

			return image_html;
		}

		get_row_body_html(item, title, settings) {
			var body_html = "<div class='col-10 text-left'>";
			body_html += this.get_title_html(item, title, settings);
			body_html += this.get_item_details(item, settings);
			body_html += "</div>";
			return body_html;
		}

		get_title_html(item, title, settings) {
			var title_html = "<div style=\"display: flex; margin-left: -15px;\">";
			title_html += "\n\t\t\t<div class=\"col-8\" style=\"margin-right: -15px;\">\n\t\t\t\t<a class=\"\" href=\"/" + (item.route || '#') + "\"\n\t\t\t\t\tstyle=\"color: var(--gray-800); font-weight: 500;\">\n\t\t\t\t\t" + title + "\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t";

			if (settings.enabled) {
				title_html += "<div class=\"col-4 cart-action-container " + (item.in_cart ? 'd-flex' : '') + "\">";
				title_html += this.get_primary_button(item, settings);
				title_html += "</div>";
			}
			title_html += "</div>";

			return title_html;
		}

		get_item_details(item, settings) {
			var details = "\n\t\t\t<p class=\"product-code\">\n\t\t\t\t" + (item.item_group) + " | Item Code : " + (item.item_code) + "\n\t\t\t</p>\n\t\t\t<div class=\"mt-2\" style=\"color: var(--gray-600) !important; font-size: 13px;\">\n\t\t\t\t" + (item.short_description || '') + "\n\t\t\t</div>\n\t\t\t<div class=\"product-price\">\n\t\t\t\t" + (item.formatted_price || '') + "\n\t\t";

			if (item.formatted_mrp) {
				details += "\n\t\t\t\t<small class=\"striked-price\">\n\t\t\t\t\t<s>" + (item.formatted_mrp ? item.formatted_mrp.replace(/ +/g, "") : "") + "</s>\n\t\t\t\t</small>\n\t\t\t\t<small class=\"ml-1 product-info-green\">\n\t\t\t\t\t" + (item.discount) + " OFF\n\t\t\t\t</small>\n\t\t\t";
			}

			details += this.get_stock_availability(item, settings);
			details += "</div>";

			return details;
		}

		get_stock_availability(item, settings) {
			if (settings.show_stock_availability && !item.has_variants) {
				if (item.on_backorder) {
					return ("\n\t\t\t\t\t<br>\n\t\t\t\t\t<span class=\"out-of-stock mt-2\" style=\"color: var(--primary-color)\">\n\t\t\t\t\t\t" + (__("Available on backorder")) + "\n\t\t\t\t\t</span>\n\t\t\t\t");
				} else if (!item.in_stock) {
					return ("\n\t\t\t\t\t<br>\n\t\t\t\t\t<span class=\"out-of-stock mt-2\">" + (__("Out of stock")) + "</span>\n\t\t\t\t");
				}
			}
			return "";
		}

		get_wishlist_icon(item) {
			var icon_class = item.wished ? "wished" : "not-wished";

			return ("\n\t\t\t<div class=\"like-action-list " + (item.wished ? "like-action-wished" : '') + "\"\n\t\t\t\tdata-item-code=\"" + (item.item_code) + "\">\n\t\t\t\t<svg class=\"icon sm\">\n\t\t\t\t\t<use class=\"" + icon_class + " wish-icon\" href=\"#icon-heart\"></use>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t");
		}

		get_primary_button(item, settings) {
			if (item.has_variants) {
				return ("\n\t\t\t\t<a href=\"/" + (item.route || '#') + "\">\n\t\t\t\t\t<div class=\"btn btn-sm btn-explore-variants btn mb-0 mt-0\">\n\t\t\t\t\t\t" + (__('Explore')) + "\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t");
			} else if (settings.enabled && (settings.allow_items_not_in_stock || item.in_stock)) {
				return ("\n\t\t\t\t<div id=\"" + (item.name) + "\" class=\"btn\n\t\t\t\t\tbtn-sm btn-primary btn-add-to-cart-list mb-0\n\t\t\t\t\t" + (item.in_cart ? 'hidden' : '') + "\"\n\t\t\t\t\tdata-item-code=\"" + (item.item_code) + "\"\n\t\t\t\t\tstyle=\"margin-top: 0px !important; max-height: 30px; float: right;\n\t\t\t\t\t\tpadding: 0.25rem 1rem; min-width: 135px;\">\n\t\t\t\t\t<span class=\"mr-2\">\n\t\t\t\t\t\t<svg class=\"icon icon-md\">\n\t\t\t\t\t\t\t<use href=\"#icon-assets\"></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</span>\n\t\t\t\t\t" + (settings.enable_checkout ? __('Add to Cart') :  __('Add to Quote')) + "\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"cart-indicator list-indicator " + (item.in_cart ? '' : 'hidden') + "\">\n\t\t\t\t\t1\n\t\t\t\t</div>\n\n\t\t\t\t<a href=\"/cart\">\n\t\t\t\t\t<div id=\"" + (item.name) + "\" class=\"btn\n\t\t\t\t\t\tbtn-sm btn-primary btn-add-to-cart-list\n\t\t\t\t\t\tml-4 go-to-cart mb-0 mt-0\n\t\t\t\t\t\t" + (item.in_cart ? '' : 'hidden') + "\"\n\t\t\t\t\t\tdata-item-code=\"" + (item.item_code) + "\"\n\t\t\t\t\t\tstyle=\"padding: 0.25rem 1rem; min-width: 135px;\">\n\t\t\t\t\t\t" + (settings.enable_checkout ? __('Go to Cart') :  __('Go to Quote')) + "\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t");
			} else {
				return "";
			}
		}

	};

	erpnext.ProductSearch = class {
		constructor() {
			this.MAX_RECENT_SEARCHES = 4;
			this.searchBox = $("#search-box");

			this.setupSearchDropDown();
			this.bindSearchAction();
		}

		setupSearchDropDown() {
			this.search_area = $("#dropdownMenuSearch");
			this.setupSearchResultContainer();
			this.populateRecentSearches();
		}

		bindSearchAction() {
			var this$1 = this;

			var me = this;

			// Show Search dropdown
			this.searchBox.on("focus", function () {
				this$1.search_dropdown.removeClass("hidden");
			});

			// If click occurs outside search input/results, hide results.
			// Click can happen anywhere on the page
			$("body").on("click", function (e) {
				var searchEvent = $(e.target).closest('#search-box').length;
				var resultsEvent = $(e.target).closest('#search-results-container').length;
				var isResultHidden = this$1.search_dropdown.hasClass("hidden");

				if (!searchEvent && !resultsEvent && !isResultHidden) {
					this$1.search_dropdown.addClass("hidden");
				}
			});

			// Process search input
			this.searchBox.on("input", function (e) {
				var query = e.target.value;

				if (query.length == 0) {
					me.populateResults(null);
					me.populateCategoriesList(null);
				}

				if (query.length < 3 || !query.length) { return; }

				frappe.call({
					method: "erpnext.templates.pages.product_search.search",
					args: {
						query: query
					},
					callback: function (data) {
						var product_results = null, category_results = null;

						// Populate product results
						product_results = data.message ? data.message.product_results : null;
						me.populateResults(product_results);

						// Populate categories
						if (me.category_container) {
							category_results = data.message ? data.message.category_results : null;
							me.populateCategoriesList(category_results);
						}

						// Populate recent search chips only on successful queries
						if (!$.isEmptyObject(product_results) || !$.isEmptyObject(category_results)) {
							me.setRecentSearches(query);
						}
					}
				});

				this$1.search_dropdown.removeClass("hidden");
			});
		}

		setupSearchResultContainer() {
			this.search_dropdown = this.search_area.append("\n\t\t\t<div class=\"overflow-hidden shadow dropdown-menu w-100 hidden\"\n\t\t\t\tid=\"search-results-container\"\n\t\t\t\taria-labelledby=\"dropdownMenuSearch\"\n\t\t\t\tstyle=\"display: flex; flex-direction: column;\">\n\t\t\t</div>\n\t\t").find("#search-results-container");

			this.setupCategoryContainer();
			this.setupProductsContainer();
			this.setupRecentsContainer();
		}

		setupProductsContainer() {
			this.products_container = this.search_dropdown.append("\n\t\t\t<div id=\"product-results mt-2\">\n\t\t\t\t<div id=\"product-scroll\" style=\"overflow: scroll; max-height: 300px\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t").find("#product-scroll");
		}

		setupCategoryContainer() {
			this.category_container = this.search_dropdown.append("\n\t\t\t<div class=\"category-container mt-2 mb-1\">\n\t\t\t\t<div class=\"category-chips\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t").find(".category-chips");
		}

		setupRecentsContainer() {
			var $recents_section = this.search_dropdown.append(("\n\t\t\t<div class=\"mb-2 mt-2 recent-searches\">\n\t\t\t\t<div>\n\t\t\t\t\t<b>" + (__("Recent")) + "</b>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t")).find(".recent-searches");

			this.recents_container = $recents_section.append("\n\t\t\t<div id=\"recents\" style=\"padding: .25rem 0 1rem 0;\">\n\t\t\t</div>\n\t\t").find("#recents");
		}

		getRecentSearches() {
			return JSON.parse(localStorage.getItem("recent_searches") || "[]");
		}

		attachEventListenersToChips() {
			var me  = this;
			var chips = $(".recent-search");
			window.chips = chips;

			var loop = function () {
				var chip = list[i];

				chip.addEventListener("click", function () {
					me.searchBox[0].value = chip.innerText.trim();

					// Start search with `recent query`
					me.searchBox.trigger("input");
					me.searchBox.focus();
				});
			};

			for (var i = 0, list = chips; i < list.length; i += 1) loop();
		}

		setRecentSearches(query) {
			var recents = this.getRecentSearches();
			if (recents.length >= this.MAX_RECENT_SEARCHES) {
				// Remove the `first` query
				recents.splice(0, 1);
			}

			if (recents.indexOf(query) >= 0) {
				return;
			}

			recents.push(query);
			localStorage.setItem("recent_searches", JSON.stringify(recents));

			this.populateRecentSearches();
		}

		populateRecentSearches() {
			var recents = this.getRecentSearches();

			if (!recents.length) {
				this.recents_container.html("<span class=\"\"text-muted\">No searches yet.</span>");
				return;
			}

			var html = "";
			recents.forEach(function (key) {
				html += "\n\t\t\t\t<div class=\"recent-search mr-1\" style=\"font-size: 13px\">\n\t\t\t\t\t<span class=\"mr-2\">\n\t\t\t\t\t\t<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t<path d=\"M8 14C11.3137 14 14 11.3137 14 8C14 4.68629 11.3137 2 8 2C4.68629 2 2 4.68629 2 8C2 11.3137 4.68629 14 8 14Z\" stroke=\"var(--gray-500)\"\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n\t\t\t\t\t\t\t<path d=\"M8.00027 5.20947V8.00017L10 10\" stroke=\"var(--gray-500)\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</span>\n\t\t\t\t\t" + key + "\n\t\t\t\t</div>\n\t\t\t";
			});

			this.recents_container.html(html);
			this.attachEventListenersToChips();
		}

		populateResults(product_results) {
			if (!product_results || product_results.length === 0) {
				var empty_html = "";
				this.products_container.html(empty_html);
				return;
			}

			var html = "";

			product_results.forEach(function (res) {
				var thumbnail = res.thumbnail || '/assets/erpnext/images/ui-states/cart-empty-state.png';
				html += "\n\t\t\t\t<div class=\"dropdown-item\" style=\"display: flex;\">\n\t\t\t\t\t<img class=\"item-thumb col-2\" src=" + thumbnail + " />\n\t\t\t\t\t<div class=\"col-9\" style=\"white-space: normal;\">\n\t\t\t\t\t\t<a href=\"/" + (res.route) + "\">" + (res.web_item_name) + "</a><br>\n\t\t\t\t\t\t<span class=\"brand-line\">" + (res.brand ? "by " + res.brand : "") + "</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t";
			});

			this.products_container.html(html);
		}

		populateCategoriesList(category_results) {
			if (!category_results || category_results.length === 0) {
				var empty_html = "\n\t\t\t\t<div class=\"category-container mt-2\">\n\t\t\t\t\t<div class=\"category-chips\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t";
				this.category_container.html(empty_html);
				return;
			}

			var html = "\n\t\t\t<div class=\"mb-2\">\n\t\t\t\t<b>" + (__("Categories")) + "</b>\n\t\t\t</div>\n\t\t";

			category_results.forEach(function (category) {
				html += "\n\t\t\t\t<a href=\"/" + (category.route) + "\" class=\"btn btn-sm category-chip mr-2 mb-2\"\n\t\t\t\t\tstyle=\"font-size: 13px\" role=\"button\">\n\t\t\t\t" + (category.name) + "\n\t\t\t\t</button>\n\t\t\t";
			});

			this.category_container.html(html);
		}
	};

}());
//# sourceMappingURL=e-commerce.min.js.map
